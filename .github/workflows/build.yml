name: Build Streamlink for Multiple Platforms

on:
  workflow_dispatch:  # 手动触发

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        include:
          - os: ubuntu-latest
            name: linux
            binary-name: streamlink
          - os: windows-latest
            name: windows
            binary-name: streamlink.exe

    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 设置Python环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Streamlink支持的Python版本

      # 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install .  # 安装Streamlink项目及其依赖

      # 构建二进制
      - name: Build Binary with PyInstaller
        run: |
          pyinstaller --onefile --name ${{ matrix.binary-name }} src/streamlink_cli/main.py

      # 上传二进制Artifacts
      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: streamlink-${{ matrix.name }}
          path: dist/${{ matrix.binary-name }}

  build-appimage:
    name: Build Linux AppImage
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 设置Python环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install .  # 安装Streamlink项目及其依赖

      # 构建Linux二进制（为AppImage准备）
      - name: Build Binary with PyInstaller
        run: |
          pyinstaller --onefile --name streamlink src/streamlink_cli/main.py

      # 安装libfuse2和AppImage工具
      - name: Install libfuse2 and appimagetool
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

      # 创建AppImage
      - name: Create AppImage
        run: |
          mkdir -p AppDir/usr/bin
          cp dist/streamlink AppDir/usr/bin/
          # 创建.desktop文件，放置在AppDir根目录，调整Categories字段
          echo "[Desktop Entry]
          Name=Streamlink
          Exec=streamlink
          Type=Application
          Terminal=true
          Icon=streamlink
          Categories=AudioVideo;" > AppDir/streamlink.desktop
          # 创建简单的占位图标文件
          touch AppDir/streamlink.png
          # 设置AppImage入口
          ln -s usr/bin/streamlink AppDir/AppRun
          # 生成AppImage
          ./appimagetool-x86_64.AppImage AppDir streamlink-x86_64.AppImage

      # 上传AppImage
      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: streamlink-appimage
          path: streamlink-x86_64.AppImage
