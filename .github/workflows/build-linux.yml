name: Build Streamlink Linux Binary

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-linux:
    strategy:
      matrix:
        arch: [x64]
    runs-on: ${{ matrix.arch == 'x64' && 'ubuntu-22.04' || 'ubuntu-22.04-arm64' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check runner architecture
        run: uname -m

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: ${{ matrix.arch }}

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg git
          python -m pip install --upgrade pip
          pip install -e .[decompress] pyinstaller

      - name: Set project version
        run: |
          version="7.6.0"
          echo "__version__ = \"$version\"" > src/streamlink/_version.py
          cat src/streamlink/_version.py

      # 5. 安装项目到虚拟环境
      - name: Install project into venv
        run: |
          pip install --upgrade .

      - name: Create PyInstaller entry script
        run: |
          mkdir -p build
          # 单行 Python 脚本，避免 PowerShell 多行 here-string 问题
          echo 'from streamlink_cli.main import main; main()' > build/entry_point.py
          cat build/entry_point.py

      - name: Run PyInstaller
        run: |
          if [ -f build/entry_point.spec ]; then rm build/entry_point.spec; fi
          pyinstaller --noconfirm --onefile --name streamlink build/entry_point.py
          ls -lh dist/

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: streamlink-linux-${{ matrix.arch }}
          path: dist/streamlink
