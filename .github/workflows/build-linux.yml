name: Build single-file Streamlink (Linux)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-22.04

    steps:
      # 1. 检出源码
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 设置 Python 3.11
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3. 升级 pip 并安装依赖，包括 versioningit、pyinstaller、toml
      - name: Install build/runtime dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install ".[decompress]" versioningit pyinstaller toml

      # 4. 生成 _version.py（这里写死版本号）
      - name: Generate src/streamlink/_version.py
        run: |
          echo "__version__ = '7.6.0'" > src/streamlink/_version.py
          cat src/streamlink/_version.py

      # 5. 安装项目到虚拟环境
      - name: Install project into venv
        run: |
          pip install --upgrade .

      # 6. 创建 PyInstaller 入口脚本
      - name: Create PyInstaller entry script
        run: |
          mkdir -p build
          echo "from streamlink_cli.main import main" > build/entry_point.py
          echo "if __name__ == '__main__':" >> build/entry_point.py
          echo "    main()" >> build/entry_point.py
          cat build/entry_point.py

      # 7. PyInstaller 打包单文件 exe，收集所有 streamlink 包资源
      - name: Build single-file EXE with PyInstaller
        run: |
          [ -f build/entry_point.spec ] && rm build/entry_point.spec
          pyinstaller --noconfirm --onefile --name streamlink --collect-all streamlink build/entry_point.py
          ls -l dist


      # 9. 上传 artifact
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: streamlink-linux
          path: |
            release/streamlink

